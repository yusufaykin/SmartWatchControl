import '../home_screen/widgets/rehbercard_item_widget.dart';import 'bloc/home_bloc.dart';import 'models/home_model.dart';import 'models/rehbercard_item_model.dart';import 'package:flutter/material.dart';import 'package:smart_watch_control/core/app_export.dart';import 'package:smart_watch_control/widgets/custom_elevated_button.dart';import 'package:smart_watch_control/widgets/custom_switch.dart';class HomeScreen extends StatelessWidget {const HomeScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<HomeBloc>(create: (context) => HomeBloc(HomeState(homeModelObj: HomeModel()))..add(HomeInitialEvent()), child: HomeScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(body: SizedBox(height: 596.v, width: double.maxFinite, child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgRectangle15140x360, height: 140.v, width: 360.h, alignment: Alignment.topCenter), Align(alignment: Alignment.center, child: Container(margin: EdgeInsets.symmetric(horizontal: 15.h), padding: EdgeInsets.symmetric(horizontal: 2.h, vertical: 18.v), decoration: BoxDecoration(borderRadius: BorderRadiusStyle.roundedBorder40), child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 24.v), Padding(padding: EdgeInsets.only(left: 29.h, right: 17.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.end, children: [CustomImageView(imagePath: ImageConstant.imgUnsplash6dmx8ynkpgo40x48, height: 40.v, width: 48.h, radius: BorderRadius.circular(24.h), margin: EdgeInsets.only(top: 5.v), onTap: () {onTapImgUnsplashdmxYnkPGo(context);}), GestureDetector(onTap: () {onTapTxtAyEGezer(context);}, child: Padding(padding: EdgeInsets.only(left: 14.h, top: 16.v, bottom: 13.v), child: Text("lbl_ay_e_gezer".tr, style: CustomTextStyles.labelLargeBlack900))), Spacer(), CustomImageView(imagePath: ImageConstant.imgNabZ, height: 40.adaptSize, width: 40.adaptSize, margin: EdgeInsets.only(bottom: 5.v), onTap: () {onTapImgNabZ(context);})])), SizedBox(height: 33.v), Padding(padding: EdgeInsets.only(left: 25.h, right: 34.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.end, children: [Container(height: 40.v, width: 83.h, margin: EdgeInsets.only(top: 21.v), child: Stack(alignment: Alignment.centerLeft, children: [BlocSelector<HomeBloc, HomeState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(alignment: Alignment.centerRight, value: isSelectedSwitch, onChange: (value) {context.read<HomeBloc>().add(ChangeSwitchEvent(value: value));});}), CustomImageView(imagePath: ImageConstant.imgRiHotspotLine, height: 24.adaptSize, width: 24.adaptSize, alignment: Alignment.centerLeft)])), Spacer(flex: 53), CustomImageView(imagePath: ImageConstant.imgThumbsUp, height: 25.v, width: 13.h, margin: EdgeInsets.only(bottom: 36.v)), Spacer(flex: 46), Container(height: 40.v, width: 78.h, margin: EdgeInsets.only(top: 21.v), child: Stack(alignment: Alignment.centerLeft, children: [BlocSelector<HomeBloc, HomeState, bool?>(selector: (state) => state.isSelectedSwitch1, builder: (context, isSelectedSwitch1) {return CustomSwitch(alignment: Alignment.centerRight, value: isSelectedSwitch1, onChange: (value) {context.read<HomeBloc>().add(ChangeSwitch1Event(value: value));});}), CustomImageView(imagePath: ImageConstant.imgAkarIconsLocation, height: 24.adaptSize, width: 24.adaptSize, alignment: Alignment.centerLeft)]))])), SizedBox(height: 41.v), _buildRehberCard(context), SizedBox(height: 27.v), CustomElevatedButton(width: 140.h, text: "lbl_iki".tr, margin: EdgeInsets.only(right: 80.h), buttonStyle: CustomButtonStyles.none, decoration: CustomButtonStyles.gradientPrimaryToTealDecoration, onPressed: () {onTapIKI(context);}, alignment: Alignment.centerRight)])))])))); } 
/// Section Widget
Widget _buildRehberCard(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 8.h), child: BlocSelector<HomeBloc, HomeState, HomeModel?>(selector: (state) => state.homeModelObj, builder: (context, homeModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: 126.v, crossAxisCount: 2, mainAxisSpacing: 17.h, crossAxisSpacing: 17.h), physics: NeverScrollableScrollPhysics(), itemCount: homeModelObj?.rehbercardItemList.length ?? 0, itemBuilder: (context, index) {RehbercardItemModel model = homeModelObj?.rehbercardItemList[index] ?? RehbercardItemModel(); return RehbercardItemWidget(model, onTapRehberCard: () {onTapRehberCard(context);});});})); } 
/// Navigates to the gVenliAlanSayfasALRMenScreen when the action is triggered.
onTapRehberCard(BuildContext context) { NavigatorService.pushNamed(AppRoutes.gVenliAlanSayfasALRMenScreen); } 
/// Navigates to the ayarlarSayfasBildirimlerAKOneScreen when the action is triggered.
onTapImgUnsplashdmxYnkPGo(BuildContext context) { NavigatorService.pushNamed(AppRoutes.ayarlarSayfasBildirimlerAKOneScreen, ); } 
/// Navigates to the ayarlarSayfasBildirimlerAKOneScreen when the action is triggered.
onTapTxtAyEGezer(BuildContext context) { NavigatorService.pushNamed(AppRoutes.ayarlarSayfasBildirimlerAKOneScreen, ); } 
/// Navigates to the nabZTakipIzelgesiTabContainerScreen when the action is triggered.
onTapImgNabZ(BuildContext context) { NavigatorService.pushNamed(AppRoutes.nabZTakipIzelgesiTabContainerScreen, ); } 
/// Navigates to the giriScreen when the action is triggered.
onTapIKI(BuildContext context) { NavigatorService.pushNamed(AppRoutes.giriScreen, ); } 
 }
